package com.example.myapplication.room

import androidx.room.Delete
import androidx.room.Insert
import androidx.room.Query
import com.example.myapplication.model.Films

interface DAOFilms {

    @Query("SELECT * FROM FilmsId")
    fun getAll():List<Films>

    @Insert
    fun insertAll(vararg users: FilmsId)

    @Delete
    fun delete(Film: FilmsId)

}

//Когда вы используете библиотеку сохраняемости Room для хранения данных вашего приложения,
// вы взаимодействуете с сохраненными данными путем определения к объектов доступа данным или DAO.
// Каждый DAO включает методы, которые предлагают абстрактный доступ к базе данных вашего приложения.
// При компиляции время, Room автоматически генерирует реализации DAO, которые вы определяете.
//
//Используя DAO для доступа к базе данных вашего приложения вместо построителей запросов или прямого запросов,
// вы можете сохранить разделение проблемы , критический архитектурный принцип.
// DAO также упрощают имитацию доступа к базе данных, когда вы протестируйте свое приложение .


//Вы можете определить каждый DAO как интерфейс или как абстрактный класс.
// Для базового варианты использования, как правило, следует использовать интерфейс.
// В любом случае вы всегда должны аннотируйте свои DAO с помощью @Dao. DAO не имеют свойств,
// но они определяют один или несколько методов взаимодействия с данными в базе данных вашего приложения.

//@Insert - В @Insertаннотация позволяет определить методы,
// которые вставляют свои параметры в соответствующую таблицу в база данных.
// В следующем коде показаны примеры действительных @Insertметоды,
// которые вставить один или несколько Userобъекты в базу данныx.

//@Update
//В @Update аннотация позволяет определить методы, которые обновляют определенные строки в таблице базы данных.
// Аналогично @Insertметоды, @Updateметоды принимают экземпляры сущностей данных в качестве параметров.
// В следующем коде показан пример @Updateметод, который пытается обновить один или несколько Userобъекты в базе:

//@Query
//В @Query аннотация позволяет писать операторы SQL и предоставлять их как методы DAO.
// Используйте эти методы запроса, чтобы запрашивать данные из базы данных вашего приложения,
// или когда вам нужно выполнить более сложные вставляет, обновляет и удаляет.

